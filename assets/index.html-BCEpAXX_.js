import{_ as i,c as a,d as t,o as e}from"./app-DoO5dwbX.js";const n="/assets/image-20250627135446822-cxjtjmhb.png",h="/assets/image-20250627135703932-C0JUYcJg.png",l="/assets/image-20250627140246629-DIFEwD7Q.png",p="/assets/image-20250627140655033-CREa_f-3.png",r="/assets/image-20250627140950392-HevCepl1.png",k="/assets/image-20250627141150228-BhOnb8Of.png",d="/assets/image-20250627142245389-BqkYySMh.png",c={};function o(g,s){return e(),a("div",null,s[0]||(s[0]=[t('<h2 id="需求" tabindex="-1"><a class="header-anchor" href="#需求"><span>需求</span></a></h2><p>微信小程序中的某个网络请求会获取到一个数组，数组的每个元素都是对象，对象中有 <code>iconUrl</code> 属性。现在要获取这个数组中的所有<code>iconUrl</code>值。</p><p>小程序运行到微信开发者工具，控制台打印数据为：</p><p><img src="'+n+'" alt="alt text"></p><h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析"><span>分析</span></a></h2><p>因为数据较多，而且 <code>this.scrollList</code> 是对象组成的数组，所以数据没有直接展示出来，我们需要一个个点开才能看到 <code>iconUrl</code>值。</p><p><img src="'+h+`" alt="alt text"></p><p>挨个点开看<code>iconUrl</code>值，然后复制、粘贴到浏览器下载图片 虽然可行，但是太累效率也太低。</p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h2><h3 id="数组转为-json-字符串" tabindex="-1"><a class="header-anchor" href="#数组转为-json-字符串"><span>数组转为 json 字符串</span></a></h3><p>在代码中把 <code>this.scrollList</code>转为<code>json</code>字符串并打印：</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">this.scrollList</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">scrollList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">----------------------------------</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">JSON</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">stringify</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">scrollList</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">));</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+'" alt="alt text"></p><h3 id="在浏览器控制台处理数据" tabindex="-1"><a class="header-anchor" href="#在浏览器控制台处理数据"><span>在浏览器控制台处理数据</span></a></h3><p>打开浏览器，开一个新标签页，点击 <strong>控制台</strong>，定义一个测试变量 <code>const testArray</code>：</p><p><img src="'+p+`" alt="alt text"></p><h3 id="用-map-处理数据" tabindex="-1"><a class="header-anchor" href="#用-map-处理数据"><span>用 map() 处理数据</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">testArray</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">map</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">array</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">iconUrl</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+r+'" alt="alt text"></p><p>控制台打印出每个对象的 <code>iconUrl</code>。并且因为在浏览器中，字符串直接变成了链接，直接点击链接，就会跳转到新页面或者直接下载。</p><p><img src="'+k+'" alt="alt text"></p><p>如果是跳转到新页面（如下图），按 Ctrl + S 快速另存图片，按 enter 快速保存。</p><p><img src="'+d+'" alt="alt text"></p><h2 id="结语" tabindex="-1"><a class="header-anchor" href="#结语"><span>结语</span></a></h2><p>本来我打算把 json 字符串格式化后复制到 vscode 中，然后用快捷键选中 iconUrl 行，但看了看浏览器，突然灵机一动想到了 map()， 处理结果意外好 🙂</p>',25)]))}const y=i(c,[["render",o]]),v=JSON.parse('{"path":"/uniapp/3645kr8f/","title":"微信小程序快速筛选出对象数组中的某个属性值","lang":"zh-CN","frontmatter":{"title":"微信小程序快速筛选出对象数组中的某个属性值","createTime":"2025/07/04 16:15:47","permalink":"/uniapp/3645kr8f/"},"readingTime":{"minutes":1.44,"words":431},"git":{"createdTime":1751621436000,"updatedTime":1751866855000,"contributors":[{"name":"twoflowers","username":"","email":"1292548615@qq.com","commits":4,"avatar":"https://gravatar.com/avatar/51a398cd538d08b052e061e4b9f2c3353a7fae1d5406ef128cad6096d91bd325?d=retro"}]},"filePathRelative":"notes/uniapp/2.uniapp_debug/15.微信小程序快速筛选出对象数组中的某个属性值.md","headers":[]}');export{y as comp,v as data};
