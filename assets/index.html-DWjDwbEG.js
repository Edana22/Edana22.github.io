import{_ as i,c as a,d as e,o as n}from"./app-DoO5dwbX.js";const l="/assets/image-82-K0c_uuGO.png",t="/assets/image-83-q0LQRVn4.png",h={};function k(p,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h2 id="vue-发送网络请求有以下几种方式" tabindex="-1"><a class="header-anchor" href="#vue-发送网络请求有以下几种方式"><span>vue 发送网络请求有以下几种方式</span></a></h2><ol><li>传统的 <code>Ajax</code> 方式是基于 <code>XMLHttpRequest(XHR)</code>，调用层级过多会出现回调地狱</li><li><code>jQuery-Ajax</code> 是对原生 <code>Ajax</code> 的封装，太笨重，使用代码为 <code>$.ajax $.get $.post</code></li><li><code>Vue-resource</code> 是 <code>vue1.0</code> 时使用，需要下载安装 <code>VueResource</code>，使用代码为 <code>$http.get()</code></li><li><code>axios</code>【最常用】，本质也是对原生 <code>XHR</code> 的封装，是它的 <code>Promise</code> 实现版本</li></ol><p><code>$</code> 在 <code>vue</code> 中表示<mark>全局变量</mark>或<mark>全局方法</mark>，如 <code>$el $data $watch $refs $route</code></p><p>但某些第三方库也会用 <code>$</code> 定义自己的属性和方法，如 <code>jquery : import $ from &#39;jquery&#39;</code></p><h2 id="vue2-中使用-axios" tabindex="-1"><a class="header-anchor" href="#vue2-中使用-axios"><span>vue2 中使用 axios</span></a></h2><ol><li>安装： <code>npm i axios</code></li><li>导入：可以在 <code>main.js</code> 配置，也可以在使用的单页面直接 <code>import</code></li><li>使用：<code>this.axios.get()</code></li></ol><h3 id="全局引入" tabindex="-1"><a class="header-anchor" href="#全局引入"><span>全局引入</span></a></h3><p>main.js</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> axios</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">axios</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">//挂载到 vue.prototype时有没有 $ 均可</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">Vue</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">prototype</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">axios</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> axios</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用： App.vue</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;">this</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">axios</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">res</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  })</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">err</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">err</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> err</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="非全局引入-使用" tabindex="-1"><a class="header-anchor" href="#非全局引入-使用"><span>非全局引入+使用</span></a></h3><p>App.vue</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> axios</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">axios</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">axios</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">get</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">url</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">then</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">res</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> res</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">data</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  })</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">catch</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">((</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">err</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    console</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">log</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">err</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> err</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  });</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="跨域怎么办" tabindex="-1"><a class="header-anchor" href="#跨域怎么办"><span>跨域怎么办</span></a></h2><p>目前可用的一个测试网址是 <a href="https://jsonplaceholder.typicode.com/posts/1" target="_blank" rel="noopener noreferrer">https://jsonplaceholder.typicode.com/posts/1</a> ，原先的网址失效了。</p><p>同时可以自己用 <code>IDEA</code> 或者 <code>node.js</code> 搭一个服务器，用本地网址类似 <a href="http://localhost:8081/all" target="_blank" rel="noopener noreferrer">http://localhost:8081/all</a> 测试。</p><p>如果暂时不想处理跨域问题，可以在 <code>Chrome</code> 装一个插件：<strong>Allow CORS: Access-Control-Allow-Origin</strong></p><p>安装以后点一下，左下角有一个 <code>ON|OFF</code>，点一下 <code>ON</code>，插件图标变成<code>彩色</code>就可以屏蔽跨域了。</p><p><img src="`+l+'" alt="alt text"></p><p>同时可以点击 <code>Test CORS</code> 测试跨域是否被屏蔽。</p><p><img src="'+t+'" alt="alt text"></p><h2 id="参考网址" tabindex="-1"><a class="header-anchor" href="#参考网址"><span>参考网址</span></a></h2><ul><li><a href="https://stackoverflow.com/questions/42387414/uncaught-typeerror-cannot-read-property-get-of-undefined-in-vuejs" target="_blank" rel="noopener noreferrer">javascript - Uncaught TypeError: Cannot read property &#39;get&#39; of undefined in VueJs - Stack Overflow</a></li><li><a href="https://static.kancloud.cn/cookies_fzx/cookie/1565356" target="_blank" rel="noopener noreferrer">Ajax、fetch、axios · 要努力 · 看云 (kancloud.cn)</a></li><li><a href="https://blog.csdn.net/m0_57836225/article/details/140580939" target="_blank" rel="noopener noreferrer">vue 中的$是什么？</a></li><li><a href="https://www.jb51.net/article/273433.htm" target="_blank" rel="noopener noreferrer">Vue 为何弃用 Ajax，选择 Axios？ajax 与 axios 的区别？</a></li><li><a href="https://blog.csdn.net/ljf12138/article/details/103100536" target="_blank" rel="noopener noreferrer">AJAX 和$.ajax 的使用方式</a></li></ul>',24)]))}const d=i(h,[["render",k]]),o=JSON.parse('{"path":"/vue/jrdpxpf3/","title":"vue中的网络请求","lang":"zh-CN","frontmatter":{"title":"vue中的网络请求","createTime":"2025/08/01 09:33:58","permalink":"/vue/jrdpxpf3/"},"readingTime":{"minutes":1.64,"words":491},"git":{"createdTime":1754013244000,"updatedTime":1754040359000,"contributors":[{"name":"twoflowers","username":"","email":"1292548615@qq.com","commits":3,"avatar":"https://gravatar.com/avatar/51a398cd538d08b052e061e4b9f2c3353a7fae1d5406ef128cad6096d91bd325?d=retro"}]},"filePathRelative":"notes/vue/2.vue_debug_实战/19.vue中的网络请求.md","headers":[]}');export{d as comp,o as data};
